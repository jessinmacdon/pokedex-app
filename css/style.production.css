/*
* Prefixed by https://autoprefixer.github.io
* PostCSS: v8.3.6,
* Autoprefixer: v10.3.1
* Browsers: last 4 version
*/

/*
colors used
text color: black;
primary-background-color: lightgray;
*/

html body {
  /* primary color and font for the body */
  margin: 0;
  padding: 0;
  height: 100%;
  font-family: 'Open Sans', sans-serif;
  font-weight: 400px;
  font-size: 16px;
  color: black;
  background-color: black;
  line-height: 1.6;
}

h1 {
  font-size: 24px;
  font-weight: 700px;
}

h2 {
  font-size: 20px;
  font-weight: 700px;
}

h3 {
  font-size: 18px;
  font-weight: 700px;
}

:active {
  color: blue;
}

.header {
  display: block;
  border-bottom: 2px, solid black;
}

.header__item {
  padding-left: 15px;
}

li {
  display: inline-block;
  margin: 5px;
}

.button-class {
  background-color: white;
  color: black;
  font-size: 40px;
  text-decoration: none;
  border-radius: 5px;
  -webkit-box-shadow: 4px 3px 19px 0px rgba(0,0,0,0.3);
  box-shadow: 4px 3px 19px 0px rgba(0,0,0,0.3);
  padding: 16px 32px;
  display: inline-block;
  margin: 6px 6px;
  width: 300px;
  height: 200px;
  cursor: pointer;
  -webkit-transition-duration: 0.3s;
  -o-transition-duration: 0.3s;
  transition-duration: 0.3s;
}

button:hover,
button:focus,
.button:hover,
.button:focus {
  /* effect applied to all buttons */
  -webkit-box-shadow: none;
  box-shadow: none;
  cursor: pointer;
}

.pokedex {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
}

.pokemon-list {
  list-style-type: none;
  border: 1px;
  border-radius: 5px;
  text-align: center;
}

#modal-container {
  position: fixed;
  padding: 20px;
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: rgba(0, 0, 0, 0.5);
  /* to show it above other content */
  z-index: 999;
  /* to allow scrolling if the screen is not high enough */
  overflow: auto;
  /* this is used to center the modal */
  display: none;
  text-align: center;
}

#modal-container.is-visible {
  /* add CSS for modal container */
  display: block;
}

.modal {
  margin: auto;
  display: inline-block;
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  background: #ECF0F1;
  padding: 15px;
  width: 100%;
  max-width: 700px;
  text-align: left;
  border-radius: 15px;
}

.modal-close {
  float: right;
  -webkit-appearance: none;
  border: 0;
  background: none;
  color: #FF9671;
  text-decoration: underline;
  cursor: pointer;
  font-weight: 300;
  font-size: 14px;
}

.modal img {
  position: relative;
  display: block;
  margin: auto;
  width: 250px;
}

@media screen and (min-width: 560px) and (max-width: 700px) {
  .button-class {
    font-size: 30px;
    width: 450px;
    height: 80px;
  }
}

@media screen and (min-width: 0) and (max-width: 560px) {
  .button-class {
    font-size: 20px;
    width: 250px;
    height: 70px;
  }
}

@media screen and (min-width: 0) and (max-width: 560px) {
  .header-item {
    text-align: center;
  }
}
